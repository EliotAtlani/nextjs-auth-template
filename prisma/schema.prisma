// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  password           String?
  firstname          String?
  lastname           String?
  image              String?              @default("")
  provider           String               @default("email")
  providerId         String               @default("")
  createdAt          DateTime             @default(now())
  lastLogin          DateTime             @default(now())
  role               Role                 @default(student)
  onboarded          Boolean              @default(false)
  PasswordResetToken PasswordResetToken[]
  userProfile        UserProfile?
  enterprise         Enterprise?

  // Add the subscription field
  subscription   Subscriptions? @relation(fields: [subscriptionId], references: [title])
  subscriptionId String?
}

enum Role {
  student
  enterprise
  admin
}

model PasswordResetToken {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  // Define the relationship with the User model
  user User @relation(fields: [email], references: [email])
}

model Subscriptions {
  title       String   @id @unique
  price       Float
  features    String[]
  no_features String[]
  User        User[]
}

model UserProfile {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userEmail], references: [email])
  userEmail String  @unique
  job       String?
  country   String?
  cv        String?
}

model Enterprise {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  websiteUrl  String?
  logoUrl     String?
  user        User    @relation(fields: [userEmail], references: [email])
  userEmail   String  @unique
}
